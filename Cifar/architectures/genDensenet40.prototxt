name: "Cifar-Densenet"
layer { 
  name: "dataLayer"
  type: "Data"
  top: "data_top"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 32
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_train_lmdb"
    batch_size: xBS
    backend: LMDB
  }
  image_data_param {
    shuffle: true
  }
}
layer { 
  name: "dataLayer"
  type: "Data"
  top: "data_top"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: true
    crop_size: 32
    mean_file: "examples/cifar10/mean.binaryproto"
  }
  data_param {
    source: "examples/cifar10/cifar10_test_lmdb"
    batch_size: 37
    backend: LMDB
  }
  image_data_param {
    shuffle: true
  }
}
layer { 
  name: "pre_conv"
  type: "Convolution"
  bottom: "data_top"
  top: "pre_conv_top"
  convolution_param {
    num_output: 16
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
#{ group0 start
#{ group0_b0 start
layer { # group0_b0_bn
  name: "group0_b0_bn"
  type: "BatchNorm"
  bottom: "pre_conv_top"
  top: "group0_b0_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b0_scale
  name: "group0_b0_scale"
  type: "Scale"
  bottom: "group0_b0_bn_top"
  top: "group0_b0_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b0_relu"
  type: "ReLU"
  bottom: "group0_b0_bn_top"
  top: "group0_b0_bn_top"
}
layer { 
  name: "group0_b0_conv"
  type: "Convolution"
  bottom: "group0_b0_bn_top"
  top: "group0_b0_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b0_dropout"
  type: "Dropout"
  bottom: "group0_b0_conv_top"
  top: "group0_b0_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b0_concat"
  type: "Concat"
  bottom: "group0_b0_dropout"
  bottom: "pre_conv_top"
  top: "group0_b0_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b0 end
#{ group0_b1 start
layer { # group0_b1_bn
  name: "group0_b1_bn"
  type: "BatchNorm"
  bottom: "group0_b0_concat"
  top: "group0_b1_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b1_scale
  name: "group0_b1_scale"
  type: "Scale"
  bottom: "group0_b1_bn_top"
  top: "group0_b1_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b1_relu"
  type: "ReLU"
  bottom: "group0_b1_bn_top"
  top: "group0_b1_bn_top"
}
layer { 
  name: "group0_b1_conv"
  type: "Convolution"
  bottom: "group0_b1_bn_top"
  top: "group0_b1_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b1_dropout"
  type: "Dropout"
  bottom: "group0_b1_conv_top"
  top: "group0_b1_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b1_concat"
  type: "Concat"
  bottom: "group0_b1_dropout"
  bottom: "group0_b0_concat"
  top: "group0_b1_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b1 end
#{ group0_b2 start
layer { # group0_b2_bn
  name: "group0_b2_bn"
  type: "BatchNorm"
  bottom: "group0_b1_concat"
  top: "group0_b2_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b2_scale
  name: "group0_b2_scale"
  type: "Scale"
  bottom: "group0_b2_bn_top"
  top: "group0_b2_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b2_relu"
  type: "ReLU"
  bottom: "group0_b2_bn_top"
  top: "group0_b2_bn_top"
}
layer { 
  name: "group0_b2_conv"
  type: "Convolution"
  bottom: "group0_b2_bn_top"
  top: "group0_b2_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b2_dropout"
  type: "Dropout"
  bottom: "group0_b2_conv_top"
  top: "group0_b2_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b2_concat"
  type: "Concat"
  bottom: "group0_b2_dropout"
  bottom: "group0_b1_concat"
  top: "group0_b2_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b2 end
#{ group0_b3 start
layer { # group0_b3_bn
  name: "group0_b3_bn"
  type: "BatchNorm"
  bottom: "group0_b2_concat"
  top: "group0_b3_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b3_scale
  name: "group0_b3_scale"
  type: "Scale"
  bottom: "group0_b3_bn_top"
  top: "group0_b3_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b3_relu"
  type: "ReLU"
  bottom: "group0_b3_bn_top"
  top: "group0_b3_bn_top"
}
layer { 
  name: "group0_b3_conv"
  type: "Convolution"
  bottom: "group0_b3_bn_top"
  top: "group0_b3_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b3_dropout"
  type: "Dropout"
  bottom: "group0_b3_conv_top"
  top: "group0_b3_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b3_concat"
  type: "Concat"
  bottom: "group0_b3_dropout"
  bottom: "group0_b2_concat"
  top: "group0_b3_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b3 end
#{ group0_b4 start
layer { # group0_b4_bn
  name: "group0_b4_bn"
  type: "BatchNorm"
  bottom: "group0_b3_concat"
  top: "group0_b4_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b4_scale
  name: "group0_b4_scale"
  type: "Scale"
  bottom: "group0_b4_bn_top"
  top: "group0_b4_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b4_relu"
  type: "ReLU"
  bottom: "group0_b4_bn_top"
  top: "group0_b4_bn_top"
}
layer { 
  name: "group0_b4_conv"
  type: "Convolution"
  bottom: "group0_b4_bn_top"
  top: "group0_b4_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b4_dropout"
  type: "Dropout"
  bottom: "group0_b4_conv_top"
  top: "group0_b4_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b4_concat"
  type: "Concat"
  bottom: "group0_b4_dropout"
  bottom: "group0_b3_concat"
  top: "group0_b4_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b4 end
#{ group0_b5 start
layer { # group0_b5_bn
  name: "group0_b5_bn"
  type: "BatchNorm"
  bottom: "group0_b4_concat"
  top: "group0_b5_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b5_scale
  name: "group0_b5_scale"
  type: "Scale"
  bottom: "group0_b5_bn_top"
  top: "group0_b5_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b5_relu"
  type: "ReLU"
  bottom: "group0_b5_bn_top"
  top: "group0_b5_bn_top"
}
layer { 
  name: "group0_b5_conv"
  type: "Convolution"
  bottom: "group0_b5_bn_top"
  top: "group0_b5_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b5_dropout"
  type: "Dropout"
  bottom: "group0_b5_conv_top"
  top: "group0_b5_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b5_concat"
  type: "Concat"
  bottom: "group0_b5_dropout"
  bottom: "group0_b4_concat"
  top: "group0_b5_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b5 end
#{ group0_b6 start
layer { # group0_b6_bn
  name: "group0_b6_bn"
  type: "BatchNorm"
  bottom: "group0_b5_concat"
  top: "group0_b6_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b6_scale
  name: "group0_b6_scale"
  type: "Scale"
  bottom: "group0_b6_bn_top"
  top: "group0_b6_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b6_relu"
  type: "ReLU"
  bottom: "group0_b6_bn_top"
  top: "group0_b6_bn_top"
}
layer { 
  name: "group0_b6_conv"
  type: "Convolution"
  bottom: "group0_b6_bn_top"
  top: "group0_b6_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b6_dropout"
  type: "Dropout"
  bottom: "group0_b6_conv_top"
  top: "group0_b6_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b6_concat"
  type: "Concat"
  bottom: "group0_b6_dropout"
  bottom: "group0_b5_concat"
  top: "group0_b6_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b6 end
#{ group0_b7 start
layer { # group0_b7_bn
  name: "group0_b7_bn"
  type: "BatchNorm"
  bottom: "group0_b6_concat"
  top: "group0_b7_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b7_scale
  name: "group0_b7_scale"
  type: "Scale"
  bottom: "group0_b7_bn_top"
  top: "group0_b7_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b7_relu"
  type: "ReLU"
  bottom: "group0_b7_bn_top"
  top: "group0_b7_bn_top"
}
layer { 
  name: "group0_b7_conv"
  type: "Convolution"
  bottom: "group0_b7_bn_top"
  top: "group0_b7_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b7_dropout"
  type: "Dropout"
  bottom: "group0_b7_conv_top"
  top: "group0_b7_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b7_concat"
  type: "Concat"
  bottom: "group0_b7_dropout"
  bottom: "group0_b6_concat"
  top: "group0_b7_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b7 end
#{ group0_b8 start
layer { # group0_b8_bn
  name: "group0_b8_bn"
  type: "BatchNorm"
  bottom: "group0_b7_concat"
  top: "group0_b8_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b8_scale
  name: "group0_b8_scale"
  type: "Scale"
  bottom: "group0_b8_bn_top"
  top: "group0_b8_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b8_relu"
  type: "ReLU"
  bottom: "group0_b8_bn_top"
  top: "group0_b8_bn_top"
}
layer { 
  name: "group0_b8_conv"
  type: "Convolution"
  bottom: "group0_b8_bn_top"
  top: "group0_b8_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b8_dropout"
  type: "Dropout"
  bottom: "group0_b8_conv_top"
  top: "group0_b8_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b8_concat"
  type: "Concat"
  bottom: "group0_b8_dropout"
  bottom: "group0_b7_concat"
  top: "group0_b8_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b8 end
#{ group0_b9 start
layer { # group0_b9_bn
  name: "group0_b9_bn"
  type: "BatchNorm"
  bottom: "group0_b8_concat"
  top: "group0_b9_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b9_scale
  name: "group0_b9_scale"
  type: "Scale"
  bottom: "group0_b9_bn_top"
  top: "group0_b9_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b9_relu"
  type: "ReLU"
  bottom: "group0_b9_bn_top"
  top: "group0_b9_bn_top"
}
layer { 
  name: "group0_b9_conv"
  type: "Convolution"
  bottom: "group0_b9_bn_top"
  top: "group0_b9_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b9_dropout"
  type: "Dropout"
  bottom: "group0_b9_conv_top"
  top: "group0_b9_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b9_concat"
  type: "Concat"
  bottom: "group0_b9_dropout"
  bottom: "group0_b8_concat"
  top: "group0_b9_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b9 end
#{ group0_b10 start
layer { # group0_b10_bn
  name: "group0_b10_bn"
  type: "BatchNorm"
  bottom: "group0_b9_concat"
  top: "group0_b10_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b10_scale
  name: "group0_b10_scale"
  type: "Scale"
  bottom: "group0_b10_bn_top"
  top: "group0_b10_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b10_relu"
  type: "ReLU"
  bottom: "group0_b10_bn_top"
  top: "group0_b10_bn_top"
}
layer { 
  name: "group0_b10_conv"
  type: "Convolution"
  bottom: "group0_b10_bn_top"
  top: "group0_b10_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b10_dropout"
  type: "Dropout"
  bottom: "group0_b10_conv_top"
  top: "group0_b10_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b10_concat"
  type: "Concat"
  bottom: "group0_b10_dropout"
  bottom: "group0_b9_concat"
  top: "group0_b10_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b10 end
#{ group0_b11 start
layer { # group0_b11_bn
  name: "group0_b11_bn"
  type: "BatchNorm"
  bottom: "group0_b10_concat"
  top: "group0_b11_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b11_scale
  name: "group0_b11_scale"
  type: "Scale"
  bottom: "group0_b11_bn_top"
  top: "group0_b11_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b11_relu"
  type: "ReLU"
  bottom: "group0_b11_bn_top"
  top: "group0_b11_bn_top"
}
layer { 
  name: "group0_b11_conv"
  type: "Convolution"
  bottom: "group0_b11_bn_top"
  top: "group0_b11_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b11_dropout"
  type: "Dropout"
  bottom: "group0_b11_conv_top"
  top: "group0_b11_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group0_b11_concat"
  type: "Concat"
  bottom: "group0_b11_dropout"
  bottom: "group0_b10_concat"
  top: "group0_b11_concat"
  concat_param {
    axis: 1
  }
}
#} group0_b11 end
#} group0 end
#{ group0_b12 start
layer { # group0_b12_bn
  name: "group0_b12_bn"
  type: "BatchNorm"
  bottom: "group0_b11_concat"
  top: "group0_b12_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group0_b12_scale
  name: "group0_b12_scale"
  type: "Scale"
  bottom: "group0_b12_bn_top"
  top: "group0_b12_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group0_b12_relu"
  type: "ReLU"
  bottom: "group0_b12_bn_top"
  top: "group0_b12_bn_top"
}
layer { 
  name: "group0_b12_conv"
  type: "Convolution"
  bottom: "group0_b12_bn_top"
  top: "group0_b12_conv_top"
  convolution_param {
    num_output: 160
    pad: 0
    bias_term: false 
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group0_b12_dropout"
  type: "Dropout"
  bottom: "group0_b12_conv_top"
  top: "group0_b12_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { # group0_b12_pool
  name: "group0_b12_pool"
  type: "Pooling"
  bottom: "group0_b12_dropout"
  top: "group0_b12_pool"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
#} group0_b12 end
#{ group1 start
#{ group1_b0 start
layer { # group1_b0_bn
  name: "group1_b0_bn"
  type: "BatchNorm"
  bottom: "group0_b12_pool"
  top: "group1_b0_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b0_scale
  name: "group1_b0_scale"
  type: "Scale"
  bottom: "group1_b0_bn_top"
  top: "group1_b0_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b0_relu"
  type: "ReLU"
  bottom: "group1_b0_bn_top"
  top: "group1_b0_bn_top"
}
layer { 
  name: "group1_b0_conv"
  type: "Convolution"
  bottom: "group1_b0_bn_top"
  top: "group1_b0_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b0_dropout"
  type: "Dropout"
  bottom: "group1_b0_conv_top"
  top: "group1_b0_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b0_concat"
  type: "Concat"
  bottom: "group1_b0_dropout"
  bottom: "group0_b12_pool"
  top: "group1_b0_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b0 end
#{ group1_b1 start
layer { # group1_b1_bn
  name: "group1_b1_bn"
  type: "BatchNorm"
  bottom: "group1_b0_concat"
  top: "group1_b1_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b1_scale
  name: "group1_b1_scale"
  type: "Scale"
  bottom: "group1_b1_bn_top"
  top: "group1_b1_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b1_relu"
  type: "ReLU"
  bottom: "group1_b1_bn_top"
  top: "group1_b1_bn_top"
}
layer { 
  name: "group1_b1_conv"
  type: "Convolution"
  bottom: "group1_b1_bn_top"
  top: "group1_b1_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b1_dropout"
  type: "Dropout"
  bottom: "group1_b1_conv_top"
  top: "group1_b1_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b1_concat"
  type: "Concat"
  bottom: "group1_b1_dropout"
  bottom: "group1_b0_concat"
  top: "group1_b1_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b1 end
#{ group1_b2 start
layer { # group1_b2_bn
  name: "group1_b2_bn"
  type: "BatchNorm"
  bottom: "group1_b1_concat"
  top: "group1_b2_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b2_scale
  name: "group1_b2_scale"
  type: "Scale"
  bottom: "group1_b2_bn_top"
  top: "group1_b2_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b2_relu"
  type: "ReLU"
  bottom: "group1_b2_bn_top"
  top: "group1_b2_bn_top"
}
layer { 
  name: "group1_b2_conv"
  type: "Convolution"
  bottom: "group1_b2_bn_top"
  top: "group1_b2_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b2_dropout"
  type: "Dropout"
  bottom: "group1_b2_conv_top"
  top: "group1_b2_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b2_concat"
  type: "Concat"
  bottom: "group1_b2_dropout"
  bottom: "group1_b1_concat"
  top: "group1_b2_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b2 end
#{ group1_b3 start
layer { # group1_b3_bn
  name: "group1_b3_bn"
  type: "BatchNorm"
  bottom: "group1_b2_concat"
  top: "group1_b3_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b3_scale
  name: "group1_b3_scale"
  type: "Scale"
  bottom: "group1_b3_bn_top"
  top: "group1_b3_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b3_relu"
  type: "ReLU"
  bottom: "group1_b3_bn_top"
  top: "group1_b3_bn_top"
}
layer { 
  name: "group1_b3_conv"
  type: "Convolution"
  bottom: "group1_b3_bn_top"
  top: "group1_b3_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b3_dropout"
  type: "Dropout"
  bottom: "group1_b3_conv_top"
  top: "group1_b3_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b3_concat"
  type: "Concat"
  bottom: "group1_b3_dropout"
  bottom: "group1_b2_concat"
  top: "group1_b3_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b3 end
#{ group1_b4 start
layer { # group1_b4_bn
  name: "group1_b4_bn"
  type: "BatchNorm"
  bottom: "group1_b3_concat"
  top: "group1_b4_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b4_scale
  name: "group1_b4_scale"
  type: "Scale"
  bottom: "group1_b4_bn_top"
  top: "group1_b4_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b4_relu"
  type: "ReLU"
  bottom: "group1_b4_bn_top"
  top: "group1_b4_bn_top"
}
layer { 
  name: "group1_b4_conv"
  type: "Convolution"
  bottom: "group1_b4_bn_top"
  top: "group1_b4_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b4_dropout"
  type: "Dropout"
  bottom: "group1_b4_conv_top"
  top: "group1_b4_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b4_concat"
  type: "Concat"
  bottom: "group1_b4_dropout"
  bottom: "group1_b3_concat"
  top: "group1_b4_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b4 end
#{ group1_b5 start
layer { # group1_b5_bn
  name: "group1_b5_bn"
  type: "BatchNorm"
  bottom: "group1_b4_concat"
  top: "group1_b5_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b5_scale
  name: "group1_b5_scale"
  type: "Scale"
  bottom: "group1_b5_bn_top"
  top: "group1_b5_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b5_relu"
  type: "ReLU"
  bottom: "group1_b5_bn_top"
  top: "group1_b5_bn_top"
}
layer { 
  name: "group1_b5_conv"
  type: "Convolution"
  bottom: "group1_b5_bn_top"
  top: "group1_b5_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b5_dropout"
  type: "Dropout"
  bottom: "group1_b5_conv_top"
  top: "group1_b5_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b5_concat"
  type: "Concat"
  bottom: "group1_b5_dropout"
  bottom: "group1_b4_concat"
  top: "group1_b5_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b5 end
#{ group1_b6 start
layer { # group1_b6_bn
  name: "group1_b6_bn"
  type: "BatchNorm"
  bottom: "group1_b5_concat"
  top: "group1_b6_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b6_scale
  name: "group1_b6_scale"
  type: "Scale"
  bottom: "group1_b6_bn_top"
  top: "group1_b6_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b6_relu"
  type: "ReLU"
  bottom: "group1_b6_bn_top"
  top: "group1_b6_bn_top"
}
layer { 
  name: "group1_b6_conv"
  type: "Convolution"
  bottom: "group1_b6_bn_top"
  top: "group1_b6_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b6_dropout"
  type: "Dropout"
  bottom: "group1_b6_conv_top"
  top: "group1_b6_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b6_concat"
  type: "Concat"
  bottom: "group1_b6_dropout"
  bottom: "group1_b5_concat"
  top: "group1_b6_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b6 end
#{ group1_b7 start
layer { # group1_b7_bn
  name: "group1_b7_bn"
  type: "BatchNorm"
  bottom: "group1_b6_concat"
  top: "group1_b7_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b7_scale
  name: "group1_b7_scale"
  type: "Scale"
  bottom: "group1_b7_bn_top"
  top: "group1_b7_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b7_relu"
  type: "ReLU"
  bottom: "group1_b7_bn_top"
  top: "group1_b7_bn_top"
}
layer { 
  name: "group1_b7_conv"
  type: "Convolution"
  bottom: "group1_b7_bn_top"
  top: "group1_b7_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b7_dropout"
  type: "Dropout"
  bottom: "group1_b7_conv_top"
  top: "group1_b7_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b7_concat"
  type: "Concat"
  bottom: "group1_b7_dropout"
  bottom: "group1_b6_concat"
  top: "group1_b7_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b7 end
#{ group1_b8 start
layer { # group1_b8_bn
  name: "group1_b8_bn"
  type: "BatchNorm"
  bottom: "group1_b7_concat"
  top: "group1_b8_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b8_scale
  name: "group1_b8_scale"
  type: "Scale"
  bottom: "group1_b8_bn_top"
  top: "group1_b8_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b8_relu"
  type: "ReLU"
  bottom: "group1_b8_bn_top"
  top: "group1_b8_bn_top"
}
layer { 
  name: "group1_b8_conv"
  type: "Convolution"
  bottom: "group1_b8_bn_top"
  top: "group1_b8_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b8_dropout"
  type: "Dropout"
  bottom: "group1_b8_conv_top"
  top: "group1_b8_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b8_concat"
  type: "Concat"
  bottom: "group1_b8_dropout"
  bottom: "group1_b7_concat"
  top: "group1_b8_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b8 end
#{ group1_b9 start
layer { # group1_b9_bn
  name: "group1_b9_bn"
  type: "BatchNorm"
  bottom: "group1_b8_concat"
  top: "group1_b9_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b9_scale
  name: "group1_b9_scale"
  type: "Scale"
  bottom: "group1_b9_bn_top"
  top: "group1_b9_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b9_relu"
  type: "ReLU"
  bottom: "group1_b9_bn_top"
  top: "group1_b9_bn_top"
}
layer { 
  name: "group1_b9_conv"
  type: "Convolution"
  bottom: "group1_b9_bn_top"
  top: "group1_b9_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b9_dropout"
  type: "Dropout"
  bottom: "group1_b9_conv_top"
  top: "group1_b9_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b9_concat"
  type: "Concat"
  bottom: "group1_b9_dropout"
  bottom: "group1_b8_concat"
  top: "group1_b9_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b9 end
#{ group1_b10 start
layer { # group1_b10_bn
  name: "group1_b10_bn"
  type: "BatchNorm"
  bottom: "group1_b9_concat"
  top: "group1_b10_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b10_scale
  name: "group1_b10_scale"
  type: "Scale"
  bottom: "group1_b10_bn_top"
  top: "group1_b10_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b10_relu"
  type: "ReLU"
  bottom: "group1_b10_bn_top"
  top: "group1_b10_bn_top"
}
layer { 
  name: "group1_b10_conv"
  type: "Convolution"
  bottom: "group1_b10_bn_top"
  top: "group1_b10_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b10_dropout"
  type: "Dropout"
  bottom: "group1_b10_conv_top"
  top: "group1_b10_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b10_concat"
  type: "Concat"
  bottom: "group1_b10_dropout"
  bottom: "group1_b9_concat"
  top: "group1_b10_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b10 end
#{ group1_b11 start
layer { # group1_b11_bn
  name: "group1_b11_bn"
  type: "BatchNorm"
  bottom: "group1_b10_concat"
  top: "group1_b11_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b11_scale
  name: "group1_b11_scale"
  type: "Scale"
  bottom: "group1_b11_bn_top"
  top: "group1_b11_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b11_relu"
  type: "ReLU"
  bottom: "group1_b11_bn_top"
  top: "group1_b11_bn_top"
}
layer { 
  name: "group1_b11_conv"
  type: "Convolution"
  bottom: "group1_b11_bn_top"
  top: "group1_b11_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b11_dropout"
  type: "Dropout"
  bottom: "group1_b11_conv_top"
  top: "group1_b11_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group1_b11_concat"
  type: "Concat"
  bottom: "group1_b11_dropout"
  bottom: "group1_b10_concat"
  top: "group1_b11_concat"
  concat_param {
    axis: 1
  }
}
#} group1_b11 end
#} group1 end
#{ group1_b12 start
layer { # group1_b12_bn
  name: "group1_b12_bn"
  type: "BatchNorm"
  bottom: "group1_b11_concat"
  top: "group1_b12_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group1_b12_scale
  name: "group1_b12_scale"
  type: "Scale"
  bottom: "group1_b12_bn_top"
  top: "group1_b12_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group1_b12_relu"
  type: "ReLU"
  bottom: "group1_b12_bn_top"
  top: "group1_b12_bn_top"
}
layer { 
  name: "group1_b12_conv"
  type: "Convolution"
  bottom: "group1_b12_bn_top"
  top: "group1_b12_conv_top"
  convolution_param {
    num_output: 304
    pad: 0
    bias_term: false 
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group1_b12_dropout"
  type: "Dropout"
  bottom: "group1_b12_conv_top"
  top: "group1_b12_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { # group1_b12_pool
  name: "group1_b12_pool"
  type: "Pooling"
  bottom: "group1_b12_dropout"
  top: "group1_b12_pool"
  pooling_param {
    pool: AVE
    kernel_size: 2
    stride: 2
  }
}
#} group1_b12 end
#{ group2 start
#{ group2_b0 start
layer { # group2_b0_bn
  name: "group2_b0_bn"
  type: "BatchNorm"
  bottom: "group1_b12_pool"
  top: "group2_b0_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b0_scale
  name: "group2_b0_scale"
  type: "Scale"
  bottom: "group2_b0_bn_top"
  top: "group2_b0_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b0_relu"
  type: "ReLU"
  bottom: "group2_b0_bn_top"
  top: "group2_b0_bn_top"
}
layer { 
  name: "group2_b0_conv"
  type: "Convolution"
  bottom: "group2_b0_bn_top"
  top: "group2_b0_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b0_dropout"
  type: "Dropout"
  bottom: "group2_b0_conv_top"
  top: "group2_b0_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b0_concat"
  type: "Concat"
  bottom: "group2_b0_dropout"
  bottom: "group1_b12_pool"
  top: "group2_b0_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b0 end
#{ group2_b1 start
layer { # group2_b1_bn
  name: "group2_b1_bn"
  type: "BatchNorm"
  bottom: "group2_b0_concat"
  top: "group2_b1_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b1_scale
  name: "group2_b1_scale"
  type: "Scale"
  bottom: "group2_b1_bn_top"
  top: "group2_b1_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b1_relu"
  type: "ReLU"
  bottom: "group2_b1_bn_top"
  top: "group2_b1_bn_top"
}
layer { 
  name: "group2_b1_conv"
  type: "Convolution"
  bottom: "group2_b1_bn_top"
  top: "group2_b1_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b1_dropout"
  type: "Dropout"
  bottom: "group2_b1_conv_top"
  top: "group2_b1_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b1_concat"
  type: "Concat"
  bottom: "group2_b1_dropout"
  bottom: "group2_b0_concat"
  top: "group2_b1_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b1 end
#{ group2_b2 start
layer { # group2_b2_bn
  name: "group2_b2_bn"
  type: "BatchNorm"
  bottom: "group2_b1_concat"
  top: "group2_b2_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b2_scale
  name: "group2_b2_scale"
  type: "Scale"
  bottom: "group2_b2_bn_top"
  top: "group2_b2_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b2_relu"
  type: "ReLU"
  bottom: "group2_b2_bn_top"
  top: "group2_b2_bn_top"
}
layer { 
  name: "group2_b2_conv"
  type: "Convolution"
  bottom: "group2_b2_bn_top"
  top: "group2_b2_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b2_dropout"
  type: "Dropout"
  bottom: "group2_b2_conv_top"
  top: "group2_b2_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b2_concat"
  type: "Concat"
  bottom: "group2_b2_dropout"
  bottom: "group2_b1_concat"
  top: "group2_b2_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b2 end
#{ group2_b3 start
layer { # group2_b3_bn
  name: "group2_b3_bn"
  type: "BatchNorm"
  bottom: "group2_b2_concat"
  top: "group2_b3_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b3_scale
  name: "group2_b3_scale"
  type: "Scale"
  bottom: "group2_b3_bn_top"
  top: "group2_b3_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b3_relu"
  type: "ReLU"
  bottom: "group2_b3_bn_top"
  top: "group2_b3_bn_top"
}
layer { 
  name: "group2_b3_conv"
  type: "Convolution"
  bottom: "group2_b3_bn_top"
  top: "group2_b3_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b3_dropout"
  type: "Dropout"
  bottom: "group2_b3_conv_top"
  top: "group2_b3_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b3_concat"
  type: "Concat"
  bottom: "group2_b3_dropout"
  bottom: "group2_b2_concat"
  top: "group2_b3_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b3 end
#{ group2_b4 start
layer { # group2_b4_bn
  name: "group2_b4_bn"
  type: "BatchNorm"
  bottom: "group2_b3_concat"
  top: "group2_b4_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b4_scale
  name: "group2_b4_scale"
  type: "Scale"
  bottom: "group2_b4_bn_top"
  top: "group2_b4_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b4_relu"
  type: "ReLU"
  bottom: "group2_b4_bn_top"
  top: "group2_b4_bn_top"
}
layer { 
  name: "group2_b4_conv"
  type: "Convolution"
  bottom: "group2_b4_bn_top"
  top: "group2_b4_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b4_dropout"
  type: "Dropout"
  bottom: "group2_b4_conv_top"
  top: "group2_b4_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b4_concat"
  type: "Concat"
  bottom: "group2_b4_dropout"
  bottom: "group2_b3_concat"
  top: "group2_b4_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b4 end
#{ group2_b5 start
layer { # group2_b5_bn
  name: "group2_b5_bn"
  type: "BatchNorm"
  bottom: "group2_b4_concat"
  top: "group2_b5_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b5_scale
  name: "group2_b5_scale"
  type: "Scale"
  bottom: "group2_b5_bn_top"
  top: "group2_b5_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b5_relu"
  type: "ReLU"
  bottom: "group2_b5_bn_top"
  top: "group2_b5_bn_top"
}
layer { 
  name: "group2_b5_conv"
  type: "Convolution"
  bottom: "group2_b5_bn_top"
  top: "group2_b5_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b5_dropout"
  type: "Dropout"
  bottom: "group2_b5_conv_top"
  top: "group2_b5_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b5_concat"
  type: "Concat"
  bottom: "group2_b5_dropout"
  bottom: "group2_b4_concat"
  top: "group2_b5_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b5 end
#{ group2_b6 start
layer { # group2_b6_bn
  name: "group2_b6_bn"
  type: "BatchNorm"
  bottom: "group2_b5_concat"
  top: "group2_b6_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b6_scale
  name: "group2_b6_scale"
  type: "Scale"
  bottom: "group2_b6_bn_top"
  top: "group2_b6_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b6_relu"
  type: "ReLU"
  bottom: "group2_b6_bn_top"
  top: "group2_b6_bn_top"
}
layer { 
  name: "group2_b6_conv"
  type: "Convolution"
  bottom: "group2_b6_bn_top"
  top: "group2_b6_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b6_dropout"
  type: "Dropout"
  bottom: "group2_b6_conv_top"
  top: "group2_b6_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b6_concat"
  type: "Concat"
  bottom: "group2_b6_dropout"
  bottom: "group2_b5_concat"
  top: "group2_b6_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b6 end
#{ group2_b7 start
layer { # group2_b7_bn
  name: "group2_b7_bn"
  type: "BatchNorm"
  bottom: "group2_b6_concat"
  top: "group2_b7_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b7_scale
  name: "group2_b7_scale"
  type: "Scale"
  bottom: "group2_b7_bn_top"
  top: "group2_b7_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b7_relu"
  type: "ReLU"
  bottom: "group2_b7_bn_top"
  top: "group2_b7_bn_top"
}
layer { 
  name: "group2_b7_conv"
  type: "Convolution"
  bottom: "group2_b7_bn_top"
  top: "group2_b7_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b7_dropout"
  type: "Dropout"
  bottom: "group2_b7_conv_top"
  top: "group2_b7_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b7_concat"
  type: "Concat"
  bottom: "group2_b7_dropout"
  bottom: "group2_b6_concat"
  top: "group2_b7_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b7 end
#{ group2_b8 start
layer { # group2_b8_bn
  name: "group2_b8_bn"
  type: "BatchNorm"
  bottom: "group2_b7_concat"
  top: "group2_b8_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b8_scale
  name: "group2_b8_scale"
  type: "Scale"
  bottom: "group2_b8_bn_top"
  top: "group2_b8_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b8_relu"
  type: "ReLU"
  bottom: "group2_b8_bn_top"
  top: "group2_b8_bn_top"
}
layer { 
  name: "group2_b8_conv"
  type: "Convolution"
  bottom: "group2_b8_bn_top"
  top: "group2_b8_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b8_dropout"
  type: "Dropout"
  bottom: "group2_b8_conv_top"
  top: "group2_b8_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b8_concat"
  type: "Concat"
  bottom: "group2_b8_dropout"
  bottom: "group2_b7_concat"
  top: "group2_b8_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b8 end
#{ group2_b9 start
layer { # group2_b9_bn
  name: "group2_b9_bn"
  type: "BatchNorm"
  bottom: "group2_b8_concat"
  top: "group2_b9_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b9_scale
  name: "group2_b9_scale"
  type: "Scale"
  bottom: "group2_b9_bn_top"
  top: "group2_b9_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b9_relu"
  type: "ReLU"
  bottom: "group2_b9_bn_top"
  top: "group2_b9_bn_top"
}
layer { 
  name: "group2_b9_conv"
  type: "Convolution"
  bottom: "group2_b9_bn_top"
  top: "group2_b9_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b9_dropout"
  type: "Dropout"
  bottom: "group2_b9_conv_top"
  top: "group2_b9_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b9_concat"
  type: "Concat"
  bottom: "group2_b9_dropout"
  bottom: "group2_b8_concat"
  top: "group2_b9_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b9 end
#{ group2_b10 start
layer { # group2_b10_bn
  name: "group2_b10_bn"
  type: "BatchNorm"
  bottom: "group2_b9_concat"
  top: "group2_b10_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b10_scale
  name: "group2_b10_scale"
  type: "Scale"
  bottom: "group2_b10_bn_top"
  top: "group2_b10_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b10_relu"
  type: "ReLU"
  bottom: "group2_b10_bn_top"
  top: "group2_b10_bn_top"
}
layer { 
  name: "group2_b10_conv"
  type: "Convolution"
  bottom: "group2_b10_bn_top"
  top: "group2_b10_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b10_dropout"
  type: "Dropout"
  bottom: "group2_b10_conv_top"
  top: "group2_b10_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b10_concat"
  type: "Concat"
  bottom: "group2_b10_dropout"
  bottom: "group2_b9_concat"
  top: "group2_b10_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b10 end
#{ group2_b11 start
layer { # group2_b11_bn
  name: "group2_b11_bn"
  type: "BatchNorm"
  bottom: "group2_b10_concat"
  top: "group2_b11_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b11_scale
  name: "group2_b11_scale"
  type: "Scale"
  bottom: "group2_b11_bn_top"
  top: "group2_b11_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b11_relu"
  type: "ReLU"
  bottom: "group2_b11_bn_top"
  top: "group2_b11_bn_top"
}
layer { 
  name: "group2_b11_conv"
  type: "Convolution"
  bottom: "group2_b11_bn_top"
  top: "group2_b11_conv_top"
  convolution_param {
    num_output: 12
    pad: 1
    bias_term: false 
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "msra"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { 
  name: "group2_b11_dropout"
  type: "Dropout"
  bottom: "group2_b11_conv_top"
  top: "group2_b11_dropout"
  dropout_param {
    dropout_ratio: 0.2
  }
}
layer { 
  name: "group2_b11_concat"
  type: "Concat"
  bottom: "group2_b11_dropout"
  bottom: "group2_b10_concat"
  top: "group2_b11_concat"
  concat_param {
    axis: 1
  }
}
#} group2_b11 end
#} group2 end
#{ group2_b12 start
layer { # group2_b12_bn
  name: "group2_b12_bn"
  type: "BatchNorm"
  bottom: "group2_b11_concat"
  top: "group2_b12_bn_top"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  batch_norm_param {
    moving_average_fraction: 0.999
  }
}
layer { # group2_b12_scale
  name: "group2_b12_scale"
  type: "Scale"
  bottom: "group2_b12_bn_top"
  top: "group2_b12_bn_top"
  scale_param {
    filler { 
      value: 1
    } 
    bias_term: true
    bias_filler { 
      value: 0
    } 
  }
}
layer { 
  name: "group2_b12_relu"
  type: "ReLU"
  bottom: "group2_b12_bn_top"
  top: "group2_b12_bn_top"
}
layer { # group2_b12_pool
  name: "group2_b12_pool"
  type: "Pooling"
  bottom: "group2_b12_bn_top"
  top: "group2_b12_pool"
  pooling_param {
    pool: AVE
    global_pooling: true
  }
}
#} group2_b12 end
layer { # post_FC
  name: "post_FC"
  type: "InnerProduct"
  bottom: "group2_b12_pool"
  top: "post_FC_top"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
	  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer { # accuracy
  name: "accuracy"
  type: "Accuracy"
  bottom: "post_FC_top"
  bottom: "label"
  top: "accuracy"
}
layer { # loss
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "post_FC_top"
  bottom: "label"
  top: "loss"
}
